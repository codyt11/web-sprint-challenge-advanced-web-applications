{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\codyt\\\\documents\\\\lambdaSchool\\\\web-sprint-challenge-advanced-web-applications\\\\client\\\\src\\\\components\\\\Login.js\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { axiosAuth } from \"./utils/axiosAuth\";\n\nconst Login = () => {\n  const [login, setLogin] = useState({\n    username: \"\",\n    password: \"\"\n  });\n\n  const handleChange = e => {\n    setLogin({ ...login,\n      [e.target.name]: e.target.value\n    }); //we use a spread operator for login so it only captures the last input as opposed to all of it\n  };\n\n  const history = useHistory(); // make a post request to retrieve a token from the api\n  // when you have handled the token, navigate to the BubblePage route\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    axiosAuth().post(\"login\", login).then(res => {\n      console.log(res);\n      window.localStorage.setItem(\"token\", res.data.payload);\n      history.push(\"/bubblepage\"); //6.5. props.history.push(\"/creatures\") - if you don't set up a useHistory hook use this instead\n    }).catch(err => console.log(\"There was an error\", err.response));\n  }; //5.5 .post accepts 2 argument - the URL + the state\n\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Welcome to the Bubble App!\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Welcome to the Safari App!\"), React.createElement(\"form\", {\n    className: \"forms-style\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    label: \"username\",\n    value: login.username,\n    onChange: handleChange,\n    className: \"input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"password\",\n    label: \"password\",\n    value: login.password,\n    onChange: handleChange,\n    className: \"input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Login\"))));\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/codyt/documents/lambdaSchool/web-sprint-challenge-advanced-web-applications/client/src/components/Login.js"],"names":["React","useState","useHistory","axiosAuth","Login","login","setLogin","username","password","handleChange","e","target","name","value","history","handleSubmit","preventDefault","post","then","res","console","log","window","localStorage","setItem","data","payload","push","catch","err","response"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,SAAT,QAA0B,mBAA1B;;AACA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC;AACjCM,IAAAA,QAAQ,EAAE,EADuB;AAEjCC,IAAAA,QAAQ,EAAE;AAFuB,GAAD,CAAlC;;AAIF,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1BJ,IAAAA,QAAQ,CAAC,EACL,GAAGD,KADE;AAEL,OAACK,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAFrB,KAAD,CAAR,CAD0B,CAI5B;AACC,GALD;;AAMA,QAAMC,OAAO,GAAGZ,UAAU,EAA1B,CAXoB,CAYlB;AACA;;AACA,QAAMa,YAAY,GAAIL,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACM,cAAF;AACAb,IAAAA,SAAS,GACJc,IADL,CACU,OADV,EACmBZ,KADnB,EAEKa,IAFL,CAEUC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAG,MAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,EAAqCL,GAAG,CAACM,IAAJ,CAASC,OAA9C;AACAZ,MAAAA,OAAO,CAACa,IAAR,CAAa,aAAb,EAHS,CAIT;AACH,KAPL,EAQKC,KARL,CAQWC,GAAG,IACNT,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCQ,GAAG,CAACC,QAAtC,CATR;AASyD,GAX3D,CAdkB,CA0BZ;;;AACN,SACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADN,EAEM;AAAM,IAAA,SAAS,EAAC,aAAhB;AAA8B,IAAA,QAAQ,EAAEf,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AACQ,IAAA,IAAI,EAAC,UADb;AAEQ,IAAA,KAAK,EAAC,UAFd;AAGQ,IAAA,KAAK,EAAEV,KAAK,CAACE,QAHrB;AAIQ,IAAA,QAAQ,EAAEE,YAJlB;AAKQ,IAAA,SAAS,EAAC,OALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EASI;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AACQ,IAAA,IAAI,EAAC,UADb;AAEQ,IAAA,KAAK,EAAC,UAFd;AAGQ,IAAA,KAAK,EAAEJ,KAAK,CAACG,QAHrB;AAIQ,IAAA,QAAQ,EAAEC,YAJlB;AAKQ,IAAA,SAAS,EAAC,OALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CATJ,EAiBA;AAAQ,IAAA,OAAO,EAAEM,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAjBA,CAFN,CAFF,CADF;AA2BD,CAtDD;;AAwDA,eAAeX,KAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { axiosAuth } from \"./utils/axiosAuth\";\r\nconst Login = () => {\r\n  const [login, setLogin] = useState({\r\n    username: \"\",\r\n    password: \"\"\r\n})\r\nconst handleChange = (e) => {\r\n  setLogin({\r\n      ...login,\r\n      [e.target.name]: e.target.value})\r\n//we use a spread operator for login so it only captures the last input as opposed to all of it\r\n}\r\nconst history = useHistory()\r\n  // make a post request to retrieve a token from the api\r\n  // when you have handled the token, navigate to the BubblePage route\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    axiosAuth()\r\n        .post(\"login\", login)\r\n        .then(res => {\r\n            console.log(res);\r\n            window.localStorage.setItem(\"token\", res.data.payload)\r\n            history.push(\"/bubblepage\")\r\n            //6.5. props.history.push(\"/creatures\") - if you don't set up a useHistory hook use this instead\r\n        })\r\n        .catch(err => \r\n            console.log(\"There was an error\", err.response))}\r\n        //5.5 .post accepts 2 argument - the URL + the state\r\n  return (\r\n    <>\r\n      <h1>Welcome to the Bubble App!</h1>\r\n      <div>\r\n            <h1>Welcome to the Safari App!</h1>\r\n            <form className=\"forms-style\" onSubmit={handleSubmit}>\r\n                <label htmlFor=\"username\">\r\n                    <input type=\"text\"\r\n                            name=\"username\"\r\n                            label=\"username\"\r\n                            value={login.username}\r\n                            onChange={handleChange}\r\n                            className=\"input\"/>\r\n                            </label>\r\n                <label htmlFor=\"password\">\r\n                    <input type=\"text\"\r\n                            name=\"password\"\r\n                            label=\"password\"\r\n                            value={login.password}\r\n                            onChange={handleChange}\r\n                            className=\"input\"/>\r\n                            </label>\r\n            <button onClick={handleSubmit}>Login</button>\r\n            </form>\r\n        </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}